import React from "react";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import ThemeRegistry from "./ThemeRegistry";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";
import { setRequestLocale } from "next-intl/server";
import ThemeWrapper from "../../ThemeWrapper";
import Providers from "@/providers/Providers";

const inter = Inter({ subsets: ["latin"] });
export const metadata: Metadata = {
  title: "Majles",
  description: "Generated by create next app",
};
// Make i18 as static rendering
export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  // allow to pass local to all server components
  setRequestLocale(locale);

  // Load messages for this locale
  let messages;
  try {
    messages = require(`@/messages/${locale}.json`);
  } catch (error) {
    notFound();
  }

  return (
    <html lang={locale} dir="ltr">
      <body className={inter.className}>
        <Providers>
          <NextIntlClientProvider locale={locale} messages={messages}>
            <ThemeRegistry>
              <ThemeWrapper>
                <main style={{ minHeight: "calc(100vh - 70px)" }}>
                  {children}
                </main>
              </ThemeWrapper>
            </ThemeRegistry>
          </NextIntlClientProvider>
        </Providers>
      </body>
    </html>
  );
}
